{{- if .Values.interactive }}
apiVersion: apps/v1
kind: "StatefulSet"
{{- else }}
apiVersion: batch/v1
kind: "Job"
{{- end }}
metadata:
  name: {{ .Release.Name }}
  {{- include "chart.labels" . | indent 2}}
spec:
  {{- if .Values.interactive }}
  serviceName: {{ .Release.Name }}
  replicas: 1
  selector: 
    matchLabels: 
      release: {{ .Release.Name }}
  {{- end }}
  template:
    metadata:
      annotations:
        project: {{ .Values.project }}
        interactive: {{ quote .Values.interactive }}
        user: {{ .Values.user }}
      {{- include "chart.labels" . | indent 6}}
    spec:
      {{- if .Values.node_type }}
      nodeSelector:
        run.ai/type: {{ .Values.node_type }}
      {{- end}}
      schedulerName: runai-scheduler
      {{- if eq .Values.interactive false}}
      restartPolicy: Never
      {{- end}}
      hostIPC: {{ .Values.hostIPC }}
      containers:
        - name: {{ .Release.Name }}
          image: {{ .Values.image }}
          resources:
            limits:
              nvidia.com/gpu: {{ .Values.gpus }}
          volumeMounts:
            {{- range $index, $volume := .Values.volumes}}
            {{ $parts := split ":" $volume }}
            - mountPath: {{ $parts._1 }}
              name: "volume-{{ $index }}"
            {{- end }}
      volumes:
        {{- range $index, $volume := .Values.volumes}}
        {{ $parts := split ":" $volume }}
          - name: "volume-{{ $index }}"
            hostPath: 
              path: {{ $parts._0 }}
              type: Directory
        {{- end }}




