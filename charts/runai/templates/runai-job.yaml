{{- if .Values.interactive }}
apiVersion: apps/v1
kind: "StatefulSet"
{{- else }}
apiVersion: batch/v1
kind: "Job"
{{- end }}
metadata:
  name: {{ .Release.Name }}
  {{- include "chart.labels" . | indent 2}}
spec:
  {{- if .Values.interactive }}
  serviceName: {{ .Release.Name }}
  replicas: 1
  selector:
    matchLabels:
      release: {{ .Release.Name }}
  {{- end }}
  template:
    metadata:
      annotations:
        {{- if .Values.elastic }}
        elastic: {{ .Values.elastic | quote }}
        {{- end }}
      labels:
        {{- include "charts.label-addition" . | indent 8}}
        project: {{ .Values.project }}
        {{- if .Values.user }}
        user: {{ .Values.user }}
        {{- end }}
    spec:
      {{- if .Values.node_type }}
      nodeSelector:
        run.ai/type: {{ .Values.node_type }}
      {{- end}}
      schedulerName: runai-scheduler
      {{- if eq .Values.interactive false}}
      restartPolicy: Never
      {{- end}}
      hostIPC: {{ .Values.hostIPC }}
      containers:
        - name: {{ .Release.Name }}
          command:
          {{ range $index, $command := .Values.command }}
          - {{ quote $command }}
          {{- end}}
          args: 
          {{ range $index, $arg := .Values.args }}
          - {{ quote $arg }}
          {{- end}}
          image: {{ .Values.image }}
          {{- if .Values.localImage}}
          imagePullPolicy: Never
          {{- end }}
          resources:
            limits: 
              nvidia.com/gpu: {{ .Values.gpu }}
            requests:
              {{- if .Values.cpu}}
              cpu: {{ .Values.cpu }}
              {{- end}}
              {{- if .Values.memory}}
              memory: {{ .Values.memory }}
              {{- end }}
          volumeMounts:
            {{- range $index, $volume := .Values.volumes}}
            {{ $parts := split ":" $volume }}
            - mountPath: {{ $parts._1 }}
              name: "volume-{{ $index }}"
            {{- end }}
            {{- if .Values.shm }}
            - mountPath: /dev/shm
              name: dshm
            {{- end }}
          ports:
            {{- range $port := .Values.ports}}
            {{ $parts := split ":" $port }}
            - protocol: 'TCP'
              containerPort: {{ $parts._1 | default $parts._0 }}
            {{- end}}
          env:
            - name: podUUID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: reporterGatewayURL
              value: 'runai-prometheus-pushgateway.runai.svc.cluster.local:9091'
            {{- range $index, $env := .Values.environment}}
            {{ $parts := split "=" $env }}
            - name: {{ $parts._0 }}
              value: {{$parts._1}}
            {{- end }}  
      volumes:
        {{- range $index, $volume := .Values.volumes}}
        {{ $parts := split ":" $volume }}
          - name: "volume-{{ $index }}"
            hostPath:
              path: {{ $parts._0 }}
              type: Directory
        {{- end }}
        {{- if .Values.shm }}
          - name: dshm
            emptyDir:
              medium: Memory
        {{- end }}
